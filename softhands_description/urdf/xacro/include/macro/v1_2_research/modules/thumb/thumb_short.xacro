<?xml version="1.0"?>
<!-- 
 *  Software License Agreement: BSD 3-Clause License
 *
 * Copyright (c) 2021, NMMI
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * Neither the name of the copyright holder nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * \file      finger.xacro
 *
 * \author       _Centro di Ricerca "E.Piaggio"_
 * \author       _Istituto Italiano di Tecnologia, Soft Robotics for Human Cooperation and Rehabilitation Lab_
 *
-->

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="thumb_short" params="ns name parent *origin side">



    <!-- VIRTUAL JOINT -->
		<joint name="${ns}_${name}_joint" type="revolute">
      <axis xyz="0 0 -1"/>
      <xacro:insert_block name="origin"/>
			<parent link="${ns}_${parent}_link"/>
			<child link="${ns}_${name}_virtual_link"/>
      <limit effort="30" velocity="10" lower="0" upper="0.785398" />
      <dynamics damping="$(arg virtual_damping)" friction="$(arg virtual_friction)"/>
		</joint>

    <!-- VIRTUAL LINK -->
    <link name="${ns}_${name}_virtual_link">
      <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.001"/>
        <inertia  ixx="0.0001"      ixy="0"  	    ixz="0" 
                  iyy="0.0001" 	    iyz="0" 
        		      izz="0.0001" />
      </inertial>
      <visual>
        <geometry>
          <box size="0.001 0.001 0.001"/> 
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 0"/>
      </visual> 
    </link>

    <!-- Proximal JOINT -->
    <joint name="${ns}_${name}_virtual_joint" type="revolute">
      <origin rpy="0 0 0" xyz="0.013 0 0"/>
      <parent link="${ns}_${name}_virtual_link"/>
      <child link="${ns}_${name}_link"/>
      <axis xyz="0 0 -1"/>
      <limit effort="30" velocity="1.0" lower="0.0" upper="0.785398" />
      <dynamics damping="$(arg damping)" friction="$(arg friction)" />
    </joint>

    <!-- LINK -->
    <link name="${ns}_${name}_link">
      <inertial>

        <origin rpy="0 0 0" xyz="4.7601567e-03 -1.3786947e-03 0.0"/>

        <!-- Original value -->
        <!-- <mass value="0.0032"/>
        <inertia ixx="1.8024201e-07" ixy="5.756798e-09" ixz="0.0" iyy="2.3516266e-07" iyz="0.0" izz="2.691504e-07"/> -->

        <!-- Old value -->
        <mass value="0.005"/>
        <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/> 

      </inertial>
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="$(arg meshes_dir)/ph_short.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="qbhand/palm"/>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="$(arg meshes_dir)/ph_short.stl" scale="0.001 0.001 0.001"/>
        </geometry>
      </collision>
    </link>


        <!-- GAZEBO REF -->
    <gazebo reference="${ns}_${name}_link">
      <material>Gazebo/Grey</material>
      <selfCollide>$(arg selfCollide)</selfCollide>
      <kp value="1e4" />
      <kd value="1e2" />
      <surface>
       <friction>
        <ode>
         <mu>0.133</mu> 
         <mu2>0.133</mu2>
        </ode>
       </friction>
      </surface>
    </gazebo>
    
  </xacro:macro>

</robot>